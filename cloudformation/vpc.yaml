AWSTemplateFormatVersion: "2010-09-09"
Description: Application VPC

Mappings:
  SubnetConfig:
    Vpc:
      CIDR: 10.0.0.0/16
    Private:
      CIDRAzA: 10.0.0.0/19
      CIDRAzB: 10.0.64.0/19
      CIDRAzC: 10.0.128.0/19
    Public:
      CIDRAzA: 10.0.32.0/20
      CIDRAzB: 10.0.96.0/20
      CIDRAzC: 10.0.160.0/20
    Spare:
      CIDRAzA: 10.0.48.0/20
      CIDRAzB: 10.0.112.0/20
      CIDRAzC: 10.0.176.0/20

Resources:
  # Initialize VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !FindInMap [SubnetConfig, Vpc, CIDR]
      EnableDnsSupport: true
      EnableDnsHostnames: true

# Define all subnets by AZ
  # Availability Zone A
  SubnetPrivateAzA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Private, CIDRAzA]
      VpcId: !Ref VPC
  SubnetPublicAzA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Public, CIDRAzA]
      VpcId: !Ref VPC
  SubnetSpareAzA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Spare, CIDRAzA]
      VpcId: !Ref VPC

  # Availability Zone B
  SubnetPrivateAzB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Private, CIDRAzB]
      VpcId: !Ref VPC
  SubnetPublicAzB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Public, CIDRAzB]
      VpcId: !Ref VPC
  SubnetSpareAzB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Spare, CIDRAzB]
      VpcId: !Ref VPC

  # AZ C
  SubnetPrivateAzC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Private, CIDRAzC]
      VpcId: !Ref VPC
  SubnetPublicAzC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Public, CIDRAzC]
      VpcId: !Ref VPC
  SubnetSpareAzC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock: !FindInMap [SubnetConfig, Spare, CIDRAzC]
      VpcId: !Ref VPC

  # Networking resources for Public Subnets
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
  GatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  Route:
    DependsOn: GatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetPublicRouteTableAssociationAzA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicAzA
      RouteTableId: !Ref PublicRouteTable
  SubnetPublicRouteTableAssociationAzB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicAzB
      RouteTableId: !Ref PublicRouteTable
  SubnetPublicRouteTableAssociationAzC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublicAzC
      RouteTableId: !Ref PublicRouteTable

  # Networking resources for Private Subnets
  # One NAT for each Private Subnet
  NatGatewayOneAttachment:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
  NatGatewayTwoAttachment:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
  NatGatewayThreeAttachment:
    Type: AWS::EC2::EIP
    DependsOn: GatewayAttachment
    Properties:
      Domain: vpc
  NatGatewayOne:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayOneAttachment.AllocationId
      SubnetId: !Ref SubnetPublicAzA
  NatGatewayTwo:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayTwoAttachment.AllocationId
      SubnetId: !Ref SubnetPublicAzB
  NatGatewayThree:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayThreeAttachment.AllocationId
      SubnetId: !Ref SubnetPublicAzC
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
  PrivateRouteOne:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayOne
  PrivateRouteTwo:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayTwo
  PrivateRouteThree:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayThree
  PrivateRouteTableAssociationAzA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref SubnetPrivateAzA
  PrivateRouteTableAssociationAzB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref SubnetPrivateAzB
  PrivateRouteTableAssociationAzC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref SubnetPrivateAzC

Outputs:
  PrivateSubnetIds:
    Value: !Join [ ",", [ !Ref SubnetPrivateAzA, !Ref SubnetPrivateAzB, !Ref SubnetPrivateAzC ] ]
    Export:
      Name: PrivateSubnetIds
  PublicSubnetIds:
    Value: !Join [ ",", [ !Ref SubnetPublicAzA, !Ref SubnetPublicAzB, !Ref SubnetPublicAzC ] ]
    Export:
      Name: PublicSubnetIds
  SpareSubnetIds:
    Value: !Join [ ",", [ !Ref SubnetSpareAzA, !Ref SubnetSpareAzB, !Ref SubnetSpareAzC ] ]
    Export:
      Name: SpareSubnetIds
  VpcId:
    Value: !Ref VPC
    Export:
      Name: VpcId
